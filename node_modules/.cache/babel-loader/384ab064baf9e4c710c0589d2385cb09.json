{"ast":null,"code":"import _objectSpread from\"C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,createContext,useState}from'react';import{dummyData}from'../Data/DummyData';import{jsx as _jsx}from\"react/jsx-runtime\";var studentContext=/*#__PURE__*/createContext();export var ContextProvider=function ContextProvider(_ref){var children=_ref.children;var _useState=useState(dummyData),_useState2=_slicedToArray(_useState,2),studentData=_useState2[0],setStudentData=_useState2[1];/*더미 데이터로 학생 데이터 초기화*/var _useState3=useState({//현재 선택된 학생의 데이터, id 값만 임의로 부여해둠.\nid:null,name:null,grade:null,profileImg:null}),_useState4=_slicedToArray(_useState3,2),nowStudentData=_useState4[0],setNowStudentData=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),search=_useState6[0],setSearch=_useState6[1];//검색창 입력 값 받아옴\nvar filterStudent=function filterStudent(filterKeyword){//검색어가 들어갈 때 필터링하는 함수\nif(filterKeyword===''){//공백이면 그냥 다 출력하도록\nreturn studentData;}else{//아니면 문자열 내부에 키워드가 포함된 애들만 필터링\nreturn studentData.filter(function(student){return student.name.includes(filterKeyword);});}};var addStudent=function addStudent(newStudentData){// 학생을 추가하는 함수\nsetStudentData([].concat(_toConsumableArray(studentData),[newStudentData]));/* 학생 정보 담긴 객체 newStuData에 대해, setstuData([...stuData, newStuData]  */};var delStudent=function delStudent(){//학생을 제거하는 함수\nsetStudentData(studentData.filter(function(student){return student.id!==nowStudentData.id;}));setNowStudentData({// 현재 선택된 학생 데이터는 '없다'로 설정\nid:Math.random(),name:null,grade:null,profileImg:null});};var checkValidity=function checkValidity(Data){if(/[가-힣]{2,3}/g.test(Data.name)&&['1','2','3'].includes(Data.grade)){//2~3글자, 한글, 학년조건 체크\nvar tmp=studentData.filter(function(student){return student.grade===Data.grade;});var tmp2=tmp.filter(function(student){return student.name===Data.name;});//학년, 이름으로 필터링\nif(tmp2.length===0){modifyStudent(Data.id,Data);//학생 원본 데이터 수정\n}else{window.alert('한 학년에 동명이인이 있습니다.');}}else{// 수정 조건에 안맞는 경우\nwindow.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 수정할 수 있습니다.');}};var modifyStudent=function modifyStudent(id,data){// 학생 정보를 수정하는 함수\nsetStudentData(studentData.map(function(student){return student.id===id?_objectSpread(_objectSpread({},student),data):student;}));// id로 동일성 검증, 같다면 속성을 덮어쓰는 식으로 수정, 나머지 경우는 그대로 유지\n};return/*#__PURE__*/_jsx(studentContext.Provider,{value:{studentData:studentData,setStudentData:setStudentData,nowStudentData:nowStudentData,setNowStudentData:setNowStudentData,search:search,setSearch:setSearch,filterStudent:filterStudent,addStudent:addStudent,delStudent:delStudent,modifyStudent:modifyStudent},children:children});};export var useStudentContext=function useStudentContext(){return useContext(studentContext);};","map":null,"metadata":{},"sourceType":"module"}