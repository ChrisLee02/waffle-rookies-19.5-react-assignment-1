{"ast":null,"code":"import _slicedToArray from\"C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./StudentAddModal.css';import{useState}from'react';import{useStudentContext}from'../../../context/Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StudentAddModal=function StudentAddModal(props){var context=useStudentContext();var open=props.modalOpen;var _useState=useState(),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),grade=_useState4[0],setGrade=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),profileImg=_useState6[0],setProfileImg=_useState6[1];//모달의 텍스트 박스에 들어갈 변수\nvar AddStudent=function AddStudent(){var korean=/[가-힣]/;//한국어인지 검사하는 코드\nif(/[가-힣]{2,3}/g.test(name)&&['1','2','3'].includes(grade)){//2글자이면서, 두 글자 모두 한국어면서, 학년이 1~3이면\nvar tmp=context.studentData.filter(function(student){return student.grade===grade;});var tmp2=tmp.filter(function(student){return student.name===name;});//학년, 이름으로 필터링\nvar tmp3={//입력한 내용의 학생 클래스\nid:Math.random(),name:name,grade:grade,profileImg:profileImg};if(tmp2.length===0){// 학년과 이름으로 필터링한 tmp2가 비어 있다면 - 한 학년에 동명이인이 없다면\ncontext.addStudent(tmp3);//학생 추가\ncontext.setNowStudentData(tmp3);props.closeModal();//모달 닫기\n}else{window.alert('한 학년에 동명이인이 있어요:)');//알림 띄우고 업데이트 X, 모달 유지\n}}else{//이름 및 학년 조건이 안맞을 때\nwindow.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 설정할 수 있습니다.');}};return/*#__PURE__*/ (// 모달이 열릴때 openModal 클래스가 생성된다.\n_jsx(\"div\",{className:open?'openModal modal':'closeModal modal',children:open?/*#__PURE__*/_jsxs(\"div\",{className:open?'openModalInside':'closeModalInside',children:[/*#__PURE__*/_jsxs(\"ul\",{className:'ModalContent',children:[\" \",/*#__PURE__*/_jsxs(\"li\",{className:'ModalLine',id:'Name',children:[\"\\uC774\\uB984 \",/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){{/*입력창 내부에 변화가 생기면, state변경*/}setName(e.target.value);},className:'ModalInput'})]}),/*#__PURE__*/_jsxs(\"li\",{className:'ModalLine',id:'Grade',children:[\"\\uD559\\uB144 \",/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){setGrade(e.target.value);},className:'ModalInput'})]}),/*#__PURE__*/_jsxs(\"li\",{className:'ModalLine',id:'Profile',children:[\"\\uD504\\uB85C\\uD544 \",/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){setProfileImg(e.target.value);},className:'ModalInput'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:'Button',children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"button\",{className:'close',onClick:props.closeModal,children:\"\\uB2EB\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"button\",{className:'add',onClick:function onClick(){AddStudent();},children:\"\\uCD94\\uAC00\"})]})]}):null}));};export default StudentAddModal;","map":{"version":3,"sources":["C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/src/component/Modal/StudentAddModal/StudentAddModal.js"],"names":["useState","useStudentContext","StudentAddModal","props","context","open","modalOpen","name","setName","grade","setGrade","profileImg","setProfileImg","AddStudent","korean","test","includes","tmp","studentData","filter","student","tmp2","tmp3","id","Math","random","length","addStudent","setNowStudentData","closeModal","window","alert","e","target","value"],"mappings":"6LAAA,MAAO,uBAAP,CACA,OAAQA,QAAR,KAAuB,OAAvB,CACA,OAAQC,iBAAR,KAAgC,0BAAhC,C,wFAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,OAAO,CAAGH,iBAAiB,EAAjC,CACA,GAAMI,CAAAA,IAAI,CAAGF,KAAK,CAACG,SAAnB,CACA,cAAwBN,QAAQ,EAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAA0BR,QAAQ,EAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,eAAoCV,QAAQ,EAA5C,yCAAOW,UAAP,eAAmBC,aAAnB,eAAgD;AAChD,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,MAAM,CAAG,OAAf,CAAwB;AACxB,GAAK,cAAcC,IAAd,CAAmBR,IAAnB,GAA6B,CAAC,GAAD,CAAK,GAAL,CAAS,GAAT,EAAcS,QAAd,CAAuBP,KAAvB,CAAlC,CAAiE,CAAG;AAChE,GAAMQ,CAAAA,GAAG,CAAGb,OAAO,CAACc,WAAR,CAAoBC,MAApB,CAA2B,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACX,KAAR,GAAkBA,KAAtB,EAAlC,CAAZ,CACA,GAAMY,CAAAA,IAAI,CAAGJ,GAAG,CAACE,MAAJ,CAAW,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACb,IAAR,GAAiBA,IAArB,EAAlB,CAAb,CAA2D;AAC3D,GAAMe,CAAAA,IAAI,CAAG,CAAE;AACXC,EAAE,CAAEC,IAAI,CAACC,MAAL,EADK,CAETlB,IAAI,CAAEA,IAFG,CAGTE,KAAK,CAAEA,KAHE,CAITE,UAAU,CAAEA,UAJH,CAAb,CAMA,GAAGU,IAAI,CAACK,MAAL,GAAgB,CAAnB,CAAqB,CAAE;AACnBtB,OAAO,CAACuB,UAAR,CAAmBL,IAAnB,EAA0B;AAC1BlB,OAAO,CAACwB,iBAAR,CAA0BN,IAA1B,EACAnB,KAAK,CAAC0B,UAAN,GAAoB;AACvB,CAJD,IAIO,CACHC,MAAM,CAACC,KAAP,CAAa,mBAAb,EAAmC;AACtC,CAEJ,CAjBD,IAiBO,CAAE;AACLD,MAAM,CAACC,KAAP,CAAa,2CAAb,EACH,CACJ,CAtBD,CAwBA,oBACI;AACA,YAAK,SAAS,CAAE1B,IAAI,CAAG,iBAAH,CAAuB,kBAA3C,UACKA,IAAI,cACD,aAAK,SAAS,CAAEA,IAAI,CAAG,iBAAH,CAAuB,kBAA3C,wBACI,YAAI,SAAS,CAAE,cAAf,4BACI,YAAI,SAAS,CAAE,WAAf,CAA4B,EAAE,CAAE,MAAhC,wCACO,cAAO,QAAQ,CAAE,kBAAA2B,CAAC,CAAI,CAAE,CAAC,4BAA6B,CACzDxB,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACH,CAFM,CAEJ,SAAS,CAAE,YAFP,EADP,GADJ,cAMI,YAAI,SAAS,CAAE,WAAf,CAA4B,EAAE,CAAE,OAAhC,wCACO,cAAO,QAAQ,CAAE,kBAAAF,CAAC,CAAI,CACzBtB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACH,CAFM,CAEJ,SAAS,CAAE,YAFP,EADP,GANJ,cAWI,YAAI,SAAS,CAAE,WAAf,CAA4B,EAAE,CAAE,SAAhC,8CACQ,cAAO,QAAQ,CAAE,kBAAAF,CAAC,CAAI,CAC1BpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CACH,CAFO,CAEL,SAAS,CAAE,YAFN,EADR,GAXJ,GADJ,cAkBI,aAAK,SAAS,CAAE,QAAhB,wBACI,cADJ,cAEI,eAAQ,SAAS,CAAE,OAAnB,CAA4B,OAAO,CAAE/B,KAAK,CAAC0B,UAA3C,0BAFJ,cAGI,cAHJ,cAII,eAAQ,SAAS,CAAE,KAAnB,CAA0B,OAAO,CAAE,kBAAM,CACrChB,UAAU,GACb,CAFD,0BAJJ,GAlBJ,GADC,CA6BD,IA9BR,EAFJ,EAmCH,CAjED,CAmEA,cAAeX,CAAAA,eAAf","sourcesContent":["import './StudentAddModal.css'\r\nimport {useState} from 'react';\r\nimport {useStudentContext} from '../../../context/Context';\r\n\r\n\r\nconst StudentAddModal = (props) => {\r\n    const context = useStudentContext();\r\n    const open = props.modalOpen;\r\n    const [name, setName] = useState();\r\n    const [grade, setGrade] = useState();\r\n    const [profileImg, setProfileImg] = useState(); //모달의 텍스트 박스에 들어갈 변수\r\n    const AddStudent = () => {\r\n        const korean = /[가-힣]/; //한국어인지 검사하는 코드\r\n        if ( /[가-힣]{2,3}/g.test(name)  && ['1','2','3'].includes(grade)) {  //2글자이면서, 두 글자 모두 한국어면서, 학년이 1~3이면\r\n            const tmp = context.studentData.filter(student => student.grade === grade);\r\n            const tmp2 = tmp.filter(student => student.name === name); //학년, 이름으로 필터링\r\n            const tmp3 = { //입력한 내용의 학생 클래스\r\n                id: Math.random(),\r\n                name: name,\r\n                grade: grade,\r\n                profileImg: profileImg\r\n            };\r\n            if(tmp2.length === 0){ // 학년과 이름으로 필터링한 tmp2가 비어 있다면 - 한 학년에 동명이인이 없다면\r\n                context.addStudent(tmp3); //학생 추가\r\n                context.setNowStudentData(tmp3);\r\n                props.closeModal(); //모달 닫기\r\n            } else {\r\n                window.alert('한 학년에 동명이인이 있어요:)'); //알림 띄우고 업데이트 X, 모달 유지\r\n            }\r\n\r\n        } else { //이름 및 학년 조건이 안맞을 때\r\n            window.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 설정할 수 있습니다.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        // 모달이 열릴때 openModal 클래스가 생성된다.\r\n        <div className={open ? 'openModal modal' : 'closeModal modal'}>\r\n            {open ? (\r\n                <div className={open ? 'openModalInside' : 'closeModalInside'}>\r\n                    <ul className={'ModalContent'}> {/*이 부분 코드는 DetailContents 재사용*/}\r\n                        <li className={'ModalLine'} id={'Name'}>\r\n                            이름 <input onChange={e => { {/*입력창 내부에 변화가 생기면, state변경*/}\r\n                            setName(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                        <li className={'ModalLine'} id={'Grade'}>\r\n                            학년 <input onChange={e => {\r\n                            setGrade(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                        <li className={'ModalLine'} id={'Profile'}>\r\n                            프로필 <input onChange={e => {\r\n                            setProfileImg(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={'Button'}>\r\n                        <div></div>\r\n                        <button className={'close'} onClick={props.closeModal}>닫기</button>\r\n                        <div></div>\r\n                        <button className={'add'} onClick={() => {\r\n                            AddStudent();\r\n                        }}>추가\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentAddModal\r\n"]},"metadata":{},"sourceType":"module"}