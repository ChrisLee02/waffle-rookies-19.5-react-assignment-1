{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdchr\\\\OneDrive\\\\Desktop\\\\waffle-rookies-19.5-react-assignment-2\\\\src\\\\component\\\\Table\\\\TableContent\\\\TableContent.js\",\n    _s = $RefreshSig$();\n\nimport './TableContent.css';\nimport Arrow1 from \"./Arrow1.svg\";\nimport Arrow2 from \"./Arrow2.svg\";\nimport { useState } from 'react';\nimport { useExcontext } from '../../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableContent = props => {\n  _s();\n\n  /*const [backgroundColor, tmp] = useState(props.selected === 0 ? '#F8F8F8' : '#C4C4C4');*/\n\n  /*클릭이 되는 순간, 해당 라인은 배경색 고정, 아이콘 변경 후 고정*/\n  // ==> 무시하시면 됩니다.\n  const context = useExcontext();\n\n  const handleClick = () => {\n    if (props.selected === false) {\n      //선택되지 않은 학생을 클릭하면,\n      context.setNowStudentData(props.student);\n    } else {\n      //선택된 학생을 다시 클릭하면,\n      context.setNowStudentData({\n        id: Math.random(),\n        name: null,\n        grade: null,\n        profileImg: null\n      });\n    }\n  };\n\n  return props.selected === false ?\n  /*#__PURE__*/\n  // selected 값에 따라 배경색 및 화살표 모양 변경\n  _jsxDEV(\"div\", {\n    className: 'TableContent1',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'Name',\n      children: props.student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'Grade',\n      children: props.student.grade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      id: 'Arrow1',\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Arrow1,\n        width: '33px',\n        height: '33px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'TableContent2',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'Name',\n      children: props.student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'Grade',\n      children: props.student.grade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      id: 'Arrow2',\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Arrow2,\n        width: '33px',\n        height: '33px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TableContent, \"p8kZ9TaT29ZyNGnXtzbg4u3q3NM=\", false, function () {\n  return [useExcontext];\n});\n\n_c = TableContent;\nexport default TableContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableContent\");","map":{"version":3,"sources":["C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/src/component/Table/TableContent/TableContent.js"],"names":["useState","useExcontext","TableContent","props","context","handleClick","selected","setNowStudentData","student","id","Math","random","name","grade","profileImg","Arrow1","Arrow2"],"mappings":";;;AAAA,OAAO,oBAAP;;;AAGA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,YAAR,QAA2B,0BAA3B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B;;AACA;AAA0C;AAC1C,QAAMC,OAAO,GAAGH,YAAY,EAA5B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAIF,KAAK,CAACG,QAAN,KAAmB,KAAvB,EAA8B;AAAG;AAC7BF,MAAAA,OAAO,CAACG,iBAAR,CAA0BJ,KAAK,CAACK,OAAhC;AACH,KAFD,MAEO;AAAK;AACRJ,MAAAA,OAAO,CAACG,iBAAR,CAA0B;AACtBE,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADkB;AAEtBC,QAAAA,IAAI,EAAE,IAFgB;AAGtBC,QAAAA,KAAK,EAAE,IAHe;AAItBC,QAAAA,UAAU,EAAE;AAJU,OAA1B;AAMH;AACJ,GAXD;;AAaA,SACIX,KAAK,CAACG,QAAN,KAAmB,KAAnB;AAAA;AAA2B;AACvB;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA,gBAAyBH,KAAK,CAACK,OAAN,CAAcI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA,gBAA0BT,KAAK,CAACK,OAAN,CAAcK;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAQ,MAAA,OAAO,EAAER,WAAjB;AAA8B,MAAA,EAAE,EAAE,QAAlC;AAAA,6BAA4C;AAAK,QAAA,GAAG,EAAEU,MAAV;AAAkB,QAAA,KAAK,EAAE,MAAzB;AAAiC,QAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,gBAQI;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA,gBAAyBZ,KAAK,CAACK,OAAN,CAAcI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA,gBAA0BT,KAAK,CAACK,OAAN,CAAcK;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAQ,MAAA,OAAO,EAAER,WAAjB;AAA8B,MAAA,EAAE,EAAE,QAAlC;AAAA,6BAA4C;AAAK,QAAA,GAAG,EAAEW,MAAV;AAAkB,QAAA,KAAK,EAAE,MAAzB;AAAiC,QAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UATR;AAmBH,CArCD;;GAAMd,Y;UAGcD,Y;;;KAHdC,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import './TableContent.css'\r\nimport Arrow1 from './Arrow1.svg'\r\nimport Arrow2 from './Arrow2.svg'\r\nimport {useState} from 'react';\r\nimport {useExcontext} from '../../../context/Context';\r\n\r\nconst TableContent = (props) => {\r\n    /*const [backgroundColor, tmp] = useState(props.selected === 0 ? '#F8F8F8' : '#C4C4C4');*/\r\n    /*클릭이 되는 순간, 해당 라인은 배경색 고정, 아이콘 변경 후 고정*/ // ==> 무시하시면 됩니다.\r\n    const context = useExcontext();\r\n\r\n    const handleClick = () => {\r\n        if (props.selected === false) {  //선택되지 않은 학생을 클릭하면,\r\n            context.setNowStudentData(props.student);\r\n        } else {    //선택된 학생을 다시 클릭하면,\r\n            context.setNowStudentData({\r\n                id: Math.random(),\r\n                name: null,\r\n                grade: null,\r\n                profileImg: null\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        props.selected === false ? // selected 값에 따라 배경색 및 화살표 모양 변경\r\n            <div className={'TableContent1'}>\r\n                <div className={'Name'}>{props.student.name}</div>\r\n                <div className={'Grade'}>{props.student.grade}</div>\r\n                <div></div>\r\n                {/*공백 맞추기용*/}\r\n                <button onClick={handleClick} id={'Arrow1'}><img src={Arrow1} width={'33px'} height={'33px'}/></button>\r\n            </div> :\r\n            <div className={'TableContent2'}>\r\n                <div className={'Name'}>{props.student.name}</div>\r\n                <div className={'Grade'}>{props.student.grade}</div>\r\n                <div></div>\r\n                {/*공백 맞추기용*/}\r\n                <button onClick={handleClick} id={'Arrow2'}><img src={Arrow2} width={'33px'} height={'33px'}/>\r\n                </button>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TableContent;"]},"metadata":{},"sourceType":"module"}