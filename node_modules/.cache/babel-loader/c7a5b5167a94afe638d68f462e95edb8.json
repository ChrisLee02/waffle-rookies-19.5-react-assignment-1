{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdchr\\\\OneDrive\\\\Desktop\\\\waffle-rookies-19.5-react-assignment-2\\\\src\\\\component\\\\Detail\\\\DetailHeader\\\\DetailHeader.js\";\nimport './DetailHeader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailHeader = props => {\n  const checkValidity = Data => {\n    const korean = /[가-힣]/;\n\n    if (/[가-힣]{2,3}/g.test(Data.name) && ['1', '2', '3'].includes(Data.grade)) {\n      //2~3글자, 한글, 학년조건 체크\n      const tmp = props.stuData.filter(student => student.grade === Data.grade);\n      const tmp2 = tmp.filter(student => student.name === Data.name); //학년, 이름으로 필터링\n\n      if (tmp2.length === 0) {\n        props.modifyStudent(Data.id, Data); //학생 원본 데이터 수정\n      } else {\n        window.alert('한 학년에 동명이인이 있습니다.');\n      }\n    } else {\n      // 수정 조건에 안맞는 경우\n      window.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 수정할 수 있습니다.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'DetailHeader',\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        //수정 조건: 한글 2, 3글자 & 학년은 1, 2, 3중 하나\n        checkValidity(props.nowstuData);\n      },\n      id: 'Save',\n      children: \"\\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.setnowstuData({\n          // 현재 선택된 학생 데이터는 '없다'로 설정\n          id: Math.random(),\n          name: null,\n          grade: null,\n          profileImg: null\n        });\n        props.delStudent(props.nowstuData.id);\n      },\n      id: 'Delete',\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DetailHeader;\nexport default DetailHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailHeader\");","map":{"version":3,"sources":["C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/src/component/Detail/DetailHeader/DetailHeader.js"],"names":["DetailHeader","props","checkValidity","Data","korean","test","name","includes","grade","tmp","stuData","filter","student","tmp2","length","modifyStudent","id","window","alert","nowstuData","setnowstuData","Math","random","profileImg","delStudent"],"mappings":";AAAA,OAAO,oBAAP;;;AAEA,MAAMA,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC5B,UAAMC,MAAM,GAAG,OAAf;;AACA,QAAK,cAAcC,IAAd,CAAmBF,IAAI,CAACG,IAAxB,KAAkC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAcC,QAAd,CAAuBJ,IAAI,CAACK,KAA5B,CAAvC,EAA4E;AAAE;AAC1E,YAAMC,GAAG,GAAGR,KAAK,CAACS,OAAN,CAAcC,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACJ,KAAR,KAAkBL,IAAI,CAACK,KAAvD,CAAZ;AACA,YAAMK,IAAI,GAAGJ,GAAG,CAACE,MAAJ,CAAWC,OAAO,IAAIA,OAAO,CAACN,IAAR,KAAiBH,IAAI,CAACG,IAA5C,CAAb,CAFwE,CAER;;AAChE,UAAIO,IAAI,CAACC,MAAL,KAAc,CAAlB,EAAqB;AACjBb,QAAAA,KAAK,CAACc,aAAN,CAAoBZ,IAAI,CAACa,EAAzB,EAA6Bb,IAA7B,EADiB,CACmB;AACvC,OAFD,MAEO;AACHc,QAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACH;AAGJ,KAVD,MAUO;AAAE;AACLD,MAAAA,MAAM,CAACC,KAAP,CAAa,2CAAb;AACH;AACJ,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE;AACrBhB,QAAAA,aAAa,CAACD,KAAK,CAACkB,UAAP,CAAb;AACH,OAFD;AAEG,MAAA,EAAE,EAAE,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBlB,QAAAA,KAAK,CAACmB,aAAN,CAAoB;AAAE;AAClBJ,UAAAA,EAAE,EAAEK,IAAI,CAACC,MAAL,EADY;AAEhBhB,UAAAA,IAAI,EAAE,IAFU;AAGhBE,UAAAA,KAAK,EAAE,IAHS;AAIhBe,UAAAA,UAAU,EAAE;AAJI,SAApB;AAMAtB,QAAAA,KAAK,CAACuB,UAAN,CAAiBvB,KAAK,CAACkB,UAAN,CAAiBH,EAAlC;AACH,OARD;AAQG,MAAA,EAAE,EAAE,QARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArCD;;KAAMhB,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import './DetailHeader.css'\r\n\r\nconst DetailHeader = (props) => {\r\n\r\n    const checkValidity = (Data) => {\r\n        const korean = /[가-힣]/;\r\n        if ( /[가-힣]{2,3}/g.test(Data.name)  && ['1','2','3'].includes(Data.grade) ) { //2~3글자, 한글, 학년조건 체크\r\n            const tmp = props.stuData.filter(student => student.grade === Data.grade);\r\n            const tmp2 = tmp.filter(student => student.name === Data.name); //학년, 이름으로 필터링\r\n            if (tmp2.length===0) {\r\n                props.modifyStudent(Data.id, Data); //학생 원본 데이터 수정\r\n            } else {\r\n                window.alert('한 학년에 동명이인이 있습니다.');\r\n            }\r\n\r\n\r\n        } else { // 수정 조건에 안맞는 경우\r\n            window.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 수정할 수 있습니다.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'DetailHeader'}>\r\n            <button onClick={() => { //수정 조건: 한글 2, 3글자 & 학년은 1, 2, 3중 하나\r\n                checkValidity(props.nowstuData);\r\n            }} id={'Save'}>저장\r\n            </button>\r\n            <button onClick={() => {\r\n                props.setnowstuData({ // 현재 선택된 학생 데이터는 '없다'로 설정\r\n                    id: Math.random(),\r\n                    name: null,\r\n                    grade: null,\r\n                    profileImg: null\r\n                });\r\n                props.delStudent(props.nowstuData.id);\r\n            }} id={'Delete'}>삭제\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DetailHeader;\r\n"]},"metadata":{},"sourceType":"module"}