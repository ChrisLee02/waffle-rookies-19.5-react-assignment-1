{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdchr\\\\OneDrive\\\\Desktop\\\\waffle-rookies-19.5-react-assignment-2\\\\src\\\\component\\\\Modal\\\\StudentAddModal\\\\StudentAddModal.js\",\n    _s = $RefreshSig$();\n\nimport './StudentAddModal.css';\nimport { useState } from 'react';\nimport { useStudentContext } from '../../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentAddModal = props => {\n  _s();\n\n  const context = useStudentContext();\n  const open = props.modalOpen;\n  const [name, setName] = useState();\n  const [grade, setGrade] = useState();\n  const [profileImg, setProfileImg] = useState(); //모달의 텍스트 박스에 들어갈 변수\n\n  const AddStudent = () => {\n    const korean = /[가-힣]/; //한국어인지 검사하는 코드\n\n    if (/[가-힣]{2,3}/g.test(name) && ['1', '2', '3'].includes(grade)) {\n      //2글자이면서, 두 글자 모두 한국어면서, 학년이 1~3이면\n      const tmp = context.studentData.filter(student => student.grade === grade);\n      const tmp2 = tmp.filter(student => student.name === name); //학년, 이름으로 필터링\n\n      const tmp3 = {\n        //입력한 내용의 학생 클래스\n        id: Math.random(),\n        name: name,\n        grade: grade,\n        profileImg: profileImg\n      };\n\n      if (tmp2.length === 0) {\n        // 학년과 이름으로 필터링한 tmp2가 비어 있다면 - 한 학년에 동명이인이 없다면\n        context.addStudent(tmp3); //학생 추가\n\n        context.setNowStudentData(tmp3);\n        props.closeModal(); //모달 닫기\n\n        context.setDashBoardData(context.studentData.length === 0 ? null : [{\n          name: '1st',\n          value: context.percentage(1)\n        }, {\n          name: '2nd',\n          value: context.percentage(2)\n        }, {\n          name: '3rd',\n          value: context.percentage(3)\n        }]);\n      } else {\n        window.alert('한 학년에 동명이인이 있어요:)'); //알림 띄우고 업데이트 X, 모달 유지\n      }\n    } else {\n      //이름 및 학년 조건이 안맞을 때\n      window.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 설정할 수 있습니다.');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // 모달이 열릴때 openModal 클래스가 생성된다.\n    _jsxDEV(\"div\", {\n      className: open ? 'openModal modal' : 'closeModal modal',\n      children: open ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: open ? 'openModalInside' : 'closeModalInside',\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: 'ModalContent',\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: 'ModalLine',\n            id: 'Name',\n            children: [\"\\uC774\\uB984 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                {\n                  /*입력창 내부에 변화가 생기면, state변경*/\n                }\n                setName(e.target.value);\n              },\n              className: 'ModalInput'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: 'ModalLine',\n            id: 'Grade',\n            children: [\"\\uD559\\uB144 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setGrade(e.target.value);\n              },\n              className: 'ModalInput'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: 'ModalLine',\n            id: 'Profile',\n            children: [\"\\uD504\\uB85C\\uD544 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setProfileImg(e.target.value);\n              },\n              className: 'ModalInput'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'Button',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'close',\n            onClick: props.closeModal,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'add',\n            onClick: () => {\n              AddStudent();\n            },\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(StudentAddModal, \"zXqdJGbrHYC5/Vc0u7RlOZ3jdLs=\", false, function () {\n  return [useStudentContext];\n});\n\n_c = StudentAddModal;\nexport default StudentAddModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentAddModal\");","map":{"version":3,"sources":["C:/Users/hdchr/OneDrive/Desktop/waffle-rookies-19.5-react-assignment-2/src/component/Modal/StudentAddModal/StudentAddModal.js"],"names":["useState","useStudentContext","StudentAddModal","props","context","open","modalOpen","name","setName","grade","setGrade","profileImg","setProfileImg","AddStudent","korean","test","includes","tmp","studentData","filter","student","tmp2","tmp3","id","Math","random","length","addStudent","setNowStudentData","closeModal","setDashBoardData","value","percentage","window","alert","e","target"],"mappings":"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","sourcesContent":["import './StudentAddModal.css'\r\nimport {useState} from 'react';\r\nimport {useStudentContext} from '../../../context/Context';\r\n\r\n\r\nconst StudentAddModal = (props) => {\r\n    const context = useStudentContext();\r\n    const open = props.modalOpen;\r\n    const [name, setName] = useState();\r\n    const [grade, setGrade] = useState();\r\n    const [profileImg, setProfileImg] = useState(); //모달의 텍스트 박스에 들어갈 변수\r\n    const AddStudent = () => {\r\n        const korean = /[가-힣]/; //한국어인지 검사하는 코드\r\n        if ( /[가-힣]{2,3}/g.test(name)  && ['1','2','3'].includes(grade)) {  //2글자이면서, 두 글자 모두 한국어면서, 학년이 1~3이면\r\n            const tmp = context.studentData.filter(student => student.grade === grade);\r\n            const tmp2 = tmp.filter(student => student.name === name); //학년, 이름으로 필터링\r\n            const tmp3 = { //입력한 내용의 학생 클래스\r\n                id: Math.random(),\r\n                name: name,\r\n                grade: grade,\r\n                profileImg: profileImg\r\n            };\r\n            if(tmp2.length === 0){ // 학년과 이름으로 필터링한 tmp2가 비어 있다면 - 한 학년에 동명이인이 없다면\r\n                context.addStudent(tmp3); //학생 추가\r\n                context.setNowStudentData(tmp3);\r\n                props.closeModal(); //모달 닫기\r\n                context.setDashBoardData(context.studentData.length === 0 ? null : [{name:'1st', value:context.percentage(1)}, {name:'2nd', value:context.percentage(2)}, {name:'3rd', value:context.percentage(3)}]);\r\n            } else {\r\n                window.alert('한 학년에 동명이인이 있어요:)'); //알림 띄우고 업데이트 X, 모달 유지\r\n            }\r\n\r\n        } else { //이름 및 학년 조건이 안맞을 때\r\n            window.alert('이름은 한글 2~3글자, 학년은 1,2,3 중 하나로 설정할 수 있습니다.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        // 모달이 열릴때 openModal 클래스가 생성된다.\r\n        <div className={open ? 'openModal modal' : 'closeModal modal'}>\r\n            {open ? (\r\n                <div className={open ? 'openModalInside' : 'closeModalInside'}>\r\n                    <ul className={'ModalContent'}> {/*이 부분 코드는 DetailContents 재사용*/}\r\n                        <li className={'ModalLine'} id={'Name'}>\r\n                            이름 <input onChange={e => { {/*입력창 내부에 변화가 생기면, state변경*/}\r\n                            setName(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                        <li className={'ModalLine'} id={'Grade'}>\r\n                            학년 <input onChange={e => {\r\n                            setGrade(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                        <li className={'ModalLine'} id={'Profile'}>\r\n                            프로필 <input onChange={e => {\r\n                            setProfileImg(e.target.value);\r\n                        }} className={'ModalInput'}/>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={'Button'}>\r\n                        <div></div>\r\n                        <button className={'close'} onClick={props.closeModal}>닫기</button>\r\n                        <div></div>\r\n                        <button className={'add'} onClick={() => {\r\n                            AddStudent();\r\n                        }}>추가\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentAddModal\r\n"]},"metadata":{},"sourceType":"module"}